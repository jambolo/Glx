/** @file *//********************************************************************************************************

                                                       Rgba.cpp

						                    Copyright 2003, John J. Bolton
	--------------------------------------------------------------------------------------------------------------

	$Header: //depot/Libraries/Glx/Rgba.cpp#4 $

	$NoKeywords: $

 ********************************************************************************************************************/


#include "PrecompiledHeaders.h"

#include "Rgba.h"

namespace Glx
{

/********************************************************************************************************************/
/*																													*/
/*																													*/
/********************************************************************************************************************/

Rgba const	Rgba::BLACK  ( 0.f, 0.f, 0.f );
Rgba const	Rgba::WHITE  ( 1.f, 1.f, 1.f );
Rgba const	Rgba::GRAY   ( .5f, .5f, .5f );
Rgba const	Rgba::RED    ( 1.f, 0.f, 0.f );
Rgba const	Rgba::GREEN  ( 0.f, 1.f, 0.f );
Rgba const	Rgba::BLUE   ( 0.f, 0.f, 1.f );
Rgba const	Rgba::CYAN   ( 0.f, 1.f, 1.f );
Rgba const	Rgba::MAGENTA( 1.f, 0.f, 1.f );
Rgba const	Rgba::YELLOW ( 1.f, 1.f, 0.f );
Rgba const	Rgba::ORANGE ( 1.f, .5f, 0.f );


} // namespace Glx


/********************************************************************************************************************/
/*																													*/
/*																													*/
/********************************************************************************************************************/

std::istream & operator>>( std::istream & in, Glx::Rgba & rgba )
{
	in >> rgba.m_R >> rgba.m_G >> rgba.m_B >> rgba.m_A;

	return in;
}


/********************************************************************************************************************/
/*																													*/
/*																													*/
/********************************************************************************************************************/

std::ostream & operator<<( std::ostream & out, Glx::Rgba const & rgba )
{
	out << rgba.m_R << ' ' << rgba.m_G << ' ' << rgba.m_B << ' ' << rgba.m_A;

	return out;
}
